# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots verify

    - name: Run with Maven
      run: java -jar target/console-0.0.1-SNAPSHOT.jar

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@v4

    - name: Gather artifacts
      run: mkdir staging && cp target/*.jar staging

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging

    - name: Docker build
      run: docker image build -t console-app:${{ github.sha }} .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: 'console-app:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Docker run
      run: docker container run -it --rm console-app:${{ github.sha }}


